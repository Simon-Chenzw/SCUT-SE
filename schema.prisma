// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "lib/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now()) @db.Timestamptz(6)
  name          String         @db.Text
  email         String?        @unique @db.Text
  role          Role           @default(USER)
  credential    Credential?
  WechatAccount WechatAccount?
  requests      Request[]
}

enum Role {
  USER
  ADMIN
}

model Credential {
  user   User   @relation(fields: [email], references: [email])
  email  String @unique @db.Text
  passwd String @db.Text
}

model WechatAccount {
  id     String @id @default(cuid())
  openid String @unique @db.Text
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Request {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime        @updatedAt @db.Timestamptz(6)
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  image          Image?
  machinedResult MachinedResult?
}

model Image {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  mimeType  String   @db.Text
  blob      Bytes
  request   Request  @relation(fields: [requestId], references: [id])
  requestId String   @unique
}

model MachinedResult {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  data      Json     @db.JsonB
  request   Request  @relation(fields: [requestId], references: [id])
  requestId String   @unique
}
